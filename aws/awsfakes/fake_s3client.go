// This file was generated by counterfeiter
package awsfakes

import (
	"sync"

	"github.com/aws/aws-sdk-go/service/s3"
	"github.com/challiwill/meteorologica/aws"
)

type FakeS3Client struct {
	GetObjectStub        func(*s3.GetObjectInput) (*s3.GetObjectOutput, error)
	getObjectMutex       sync.RWMutex
	getObjectArgsForCall []struct {
		arg1 *s3.GetObjectInput
	}
	getObjectReturns struct {
		result1 *s3.GetObjectOutput
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeS3Client) GetObject(arg1 *s3.GetObjectInput) (*s3.GetObjectOutput, error) {
	fake.getObjectMutex.Lock()
	fake.getObjectArgsForCall = append(fake.getObjectArgsForCall, struct {
		arg1 *s3.GetObjectInput
	}{arg1})
	fake.recordInvocation("GetObject", []interface{}{arg1})
	fake.getObjectMutex.Unlock()
	if fake.GetObjectStub != nil {
		return fake.GetObjectStub(arg1)
	} else {
		return fake.getObjectReturns.result1, fake.getObjectReturns.result2
	}
}

func (fake *FakeS3Client) GetObjectCallCount() int {
	fake.getObjectMutex.RLock()
	defer fake.getObjectMutex.RUnlock()
	return len(fake.getObjectArgsForCall)
}

func (fake *FakeS3Client) GetObjectArgsForCall(i int) *s3.GetObjectInput {
	fake.getObjectMutex.RLock()
	defer fake.getObjectMutex.RUnlock()
	return fake.getObjectArgsForCall[i].arg1
}

func (fake *FakeS3Client) GetObjectReturns(result1 *s3.GetObjectOutput, result2 error) {
	fake.GetObjectStub = nil
	fake.getObjectReturns = struct {
		result1 *s3.GetObjectOutput
		result2 error
	}{result1, result2}
}

func (fake *FakeS3Client) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.getObjectMutex.RLock()
	defer fake.getObjectMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeS3Client) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ aws.S3Client = new(FakeS3Client)
